import requests
import sharepy
import os

def progress(msg):
    print(msg, end = '\r')

class Sharepoint:
    def __init__(self, site_url = None, username = None, password = None):
        self.site_url = site_url
        self.username = username
        self.password = password
        self.form_digest_value = None
        self.session = None

    def _build_file_url(self, path):
        return "{site_url}/_api/web/GetFileByServerRelativeUrl('{path}')".format(site_url = self.site_url, path = path)

    def _build_folder_url(self, path):
        return "{site_url}/_api/web/GetFolderByServerRelativeUrl('{path}')".format(site_url = self.site_url, path = path)

    def _build_upload_url(self, folder_url, filename):
        url_pattern = "{site_url}/_api/web/GetFolderByServerRelativeUrl('{path}')/Files/add(url='{filename}', overwrite=true)"
        return url_pattern.format(site_url = self.site_url, path = folder_url, filename = filename)

    def _build_download_url(self, file_path):
        return '{file_url}/$value'.format(file_url = self._build_file_url(file_path))

    def _build_context_url(self):
        return '{}/_api/contextinfo'.format(self.site_url)

    def _build_request_headers(self):
        headers = {'Content-Type': 'application/json; odata=verbose', 'accept': 'application/json;odata=verbose'}

        if self.session is not None:
            headers['cookie'] = self.session.cookie

        if self.form_digest_value is not None:
            headers['x-requestdigest'] = self.form_digest_value

        return headers

    def get_context_info(self):
        request = requests.post(self._build_context_url(), headers = self._build_request_headers())

        if request.status_code == 200:
            form_digest_value = request.json()['d']['GetContextWebInformation']['FormDigestValue']
            return form_digest_value
        else:
            raise Exception('Failed to get context information')

    def connect(self, site_url = None):
        if site_url is None:
            site_url = self.site_url

        if self.site_url is None:
            raise Exception('Site URL is required')

        self.session = sharepy.connect(site_url, self.username, self.password)
        
        progress('Accessing context information')
        self.form_digest_value = self.get_context_info()
        progress('Received context information')

    def download_file(self, file_path, target_path):
        progress('Downloading file...')

        url = self._build_download_url(file_path)
        response = requests.get(url, headers = self._build_request_headers())

        
        if response.status_code == 200:
            file = open(target_path, "w")
            file.write(response.text)
            file.close

            progress('Downloaded file to {}'.format(target_path))

        else:
            raise Exception('Failed to download file {}'.format(self._build_file_url(file_path)))


    def upload_file(self, file_path, folder_url):
        head, filename = os.path.split(file_path)
        upload_url = self._build_upload_url(folder_url, filename)
        headers = self._build_request_headers()

        progress('Uploading file {}'.format(file_path))

        with open(file_path, 'rb') as file:
            response = requests.post(upload_url, headers = headers, data = file.read())

            if response.status_code == 200:
                progress('Upload completed')

            else:
                raise Exception('Failed to upload file {}'.format(file_path))
